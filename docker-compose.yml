version: '3.7'
services:
  web:
    image: corpora
    expose:
      - 8000
    volumes:
      - .:/webapp/corpora/
      - static_volume:/webapp/public/static
      - media_volume:/webapp/public/media
    working_dir: /webapp/corpora/corpora/
    command: gunicorn --name corpora --max-requests 3 --log-level=debug --bind=0.0.0.0:8000 corpora.wsgi:application
    depends_on:
      - initialise
      - rabbitmq
      - memcached
    env_file: local.env
    links:
      - db
      - memcached
      - rabbitmq
  initialise:
    build: .
    image: corpora
    volumes:
      - .:/webapp/corpora/
    working_dir: /webapp/corpora/corpora/
    command: >
      bash -c "python /webapp/corpora/corpora/manage.py compilemessages
      && python /webapp/corpora/corpora/manage.py migrate --noinput
      && python /webapp/corpora/corpora/manage.py collectstatic --clear --noinput 
      && python /webapp/corpora/corpora/manage.py loaddata /webapp/corpora/corpora/people/fixtures/iwi.yaml
      && python /webapp/corpora/corpora/manage.py shell -c \"from django.db import DEFAULT_DB_ALIAS as database; from django.contrib import auth; model = auth.get_user_model(); model.objects.db_manager(database).create_superuser('docker','docker@email.com', 'password')\""
    depends_on:
      - db
    env_file: local.env 
  db:
    build: ./postgres
    # image: postgres
    # restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: corpora
      POSTGRES_DB: corpora
    expose:
      - 5432
  memcached:
    image: memcached
  rabbitmq:
    image: rabbitmq
    expose:
      - 5672
    env_file: local.env
  nginx:
    build: ./nginx
    depends_on:
      - web
    volumes:
      - static_volume:/webapp/public/static
      - media_volume:/webapp/public/media
    ports:
      - 8001:80
      - 8002:443

volumes:
  static_volume:
  media_volume:

# && python /webapp/corpora/corpora/manage.py bower_install --allow-root