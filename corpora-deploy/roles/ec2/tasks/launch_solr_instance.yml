# Tasks for creating security groups
- name: Create Web security group for Solr Search Server
  local_action:
    module: ec2_group
    name: "{{ project_name }}-{{env_type}}-solrserver"
    description: "Security group for {{ project_name }} {{env_type}} solrserver"
    region: ap-southeast-2
    rules:
      - proto: tcp
        from_port: 8080
        to_port: 8080
        group_name: "{{ project_name }}-{{env_type}}-webserver"
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 123
        to_port: 123
        cidr_ip: 0.0.0.0/0          
    rules_egress:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0    
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0 
      - proto: udp
        from_port: 123
        to_port: 123
        cidr_ip: 0.0.0.0/0          
  register: ec2_solr_group
  tags:
    sg_config

# Tasks for launching instances
# What happens if instance already exists? I'm assuming the exact_count = 1 fixes this...
# If an instance is stopped, these will launch new ones. Should they start existing ones?
- name: Launch solr instance
  local_action:
    module: ec2
    region: ap-southeast-2
    keypair: "{{ ec2_key_pair }}"
    group: "{{ project_name }}-{{env_type}}-solrserver"
    instance_type: "{{ solrserver_instance_type }}"
    image: ami-07e3993d  # let's try debian 8.1  # Debian GNU/Linux - 7.5, released 05/09/2014 - ap-southeast-2 (Sydney)
    wait: yes
    instance_tags:
      solrserver: "{{env_type}}"
    exact_count: 1
    count_tag: 
      solrserver: "{{env_type}}"
  register: ec2_solrserver

# In ansible 2.0 we can use ec2_remtote_facts instead of this hacky crap
- local_action: copy content="{{ ec2_solrserver.tagged_instances[0].private_ip }}" dest=/tmp/ec2_solrserver_private_ip

# Tasks for tagging and grouping launched instances
- name: Tag instance
  local_action: ec2_tag resource={{ item.id }} region=ap-southeast-2 state=present
  with_items: ec2_solrserver.tagged_instances 
  args:
    tags:
      Name: "{{project_name}}-{{env_type}}-solrserver"
      env: "{{env_type}}"