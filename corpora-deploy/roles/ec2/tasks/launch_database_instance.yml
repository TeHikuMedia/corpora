
- name: Create Databse security group
  local_action:
    module: ec2_group
    name: "{{ project_name }}-{{env_type}}-database"
    description: "Security group for {{ project_name }} {{env_type}} database server"
    region: ap-southeast-2
    rules:
      - proto: tcp
        from_port: 5432
        to_port: 5432
        group_name: "{{ project_name }}-{{env_type}}-webserver"
  register: ec2_database_group
  tags:
    sg_config

# It's not necessary to check if the RDS is running because the rds module will only create the RDS if it doesn't exist
# However we *could* save a few seconds if we did a check...
- name: "Launch RDS PostgreSQL {{env_type}} Database instance"
  local_action:
    module: rds
    command: create
    region: ap-southeast-2
    instance_type: "{{ database_instance_type }}"
    instance_name: "{{project_name}}-{{env_type}}-database"
    backup_retention: 30 # Possibly a bug in Ansible means this is ignored? See: <https://github.com/ansible/ansible/pull/6795>
    db_engine: postgres
    port: 5432 # The port must be supplied otherwise it defaults to 3306 (MySQL)
    size: 5 # ???
    subnet: default
    vpc_security_groups: "{{ec2_database_group.group_id}}"
    username: "{{db_user}}" ### better way to do this?
    password: "{{db_password}}" ### better way to do this?
    wait: yes
    wait_timeout: 600

- name: "Get RDS {{env_type}} Database instance facts"
  local_action:
    module: rds
    command: facts
    region: ap-southeast-2
    instance_name: "{{project_name}}-{{env_type}}-database"
  register: ec2_database



# Tasks for tagging and grouping launched instances
#- name: Tag instance
#  local_action: ec2_tag resource={{ item.id }} region=ap-southeast-2 state=present
#  with_items: ec2.instances
#  args:
#    tags:
#      Name: "{{project_name}}-{{env_type}}-database"
#      env: "{{env_type}}"

