---

- name: Install PostgreSQL tools
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - libpq-dev
    - python-psycopg2
  tags: 
    - packages
    - database
    - provision

- name: Delete database
  when: rebuild_database
  #sudo_user: postgres
  postgresql_db: name={{ db_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=absent
                 login_host={{ ec2_database.instance.endpoint }}
                 login_password={{ db_password }}
                 login_user={{db_user}}
  tags:
    - delete-database
    - provision

- name: Install postgres extensions
  # become: true
  # become_user: postgres
  postgresql_ext: name=unaccent 
                  db={{ db_name }}
                  login_host={{ ec2_database.instance.endpoint }}
                  login_password={{ db_password }}
                  login_user={{db_user}}                  
  tags:
    - build-database
    - postgres-ext

- name: Ensure database is created
  #sudo_user: postgres
  postgresql_db: name={{ db_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present
                 login_host={{ ec2_database.instance.endpoint }}
                 login_password={{ db_password }}
                 login_user={{db_user}}
  tags:
    - rebuild-database
    - provision


# - name: Ensure user has access to the database
#   #sudo_user: postgres
#   when: " '{{ec2_database.instance.endpoint}}'  == 'localhost-bug'"
#   postgresql_user: db={{ db_name }}
#                    name={{ db_user }}
#                    password={{ db_password }}
#                    priv=ALL
#                    state=present
#                    login_host={{ ec2_database.instance.endpoint }}
#                    login_password={{ db_password }}
#                    login_user={{ db_user }}
#   tags:
#     - rebuild-database
#     - provision

# - name: Ensure user does not have unnecessary privileges
#   when: " '{{ec2_database.instance.endpoint}}'  == 'localhost-bug'"
#   #sudo_user: postgres
#   postgresql_user: db={{ db_name }}
#                    name={{ db_user }}
#                    password={{ db_password }}
#                    role_attr_flags={{ db_roles }}
#                    state=present
#                    login_host={{ ec2_database.instance.endpoint }}
#                    login_password={{ db_password }}
#                    login_user={{db_user}}
#   tags:
#     - rebuild-database
#     - provision

# ###