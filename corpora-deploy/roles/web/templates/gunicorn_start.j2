#!/bin/bash

NAME="{{ application_name }}"
DJANGODIR={{ application_path }}
SOCKFILE={{ virtualenv_path }}/run/gunicorn_{{item}}.sock
USER={{ gunicorn_user }}
GROUP={{ gunicorn_group }}
# NUM_WORKERS={{ gunicorn_num_workers }}
# NUM_THREADS={{ gunicorn_num_threads }}

CPUs=$(lscpu | grep -E -m 1 "CPU\(s\): +" | awk '{print $2}')
NUM_WORKERS=$(( 2 * $CPUs + 1 ))
NUM_THREADS=$(( $CPUs ))

# Set this to 0 for unlimited requests. During development, you might want to
# set this to 1 to automatically restart the process on each request (i.e. your
# code will be reloaded on every request).
MAX_REQUESTS={{ gunicorn_max_requests }}

echo "Starting $NAME as `whoami`"

# Activate the virtual environment.
cd $DJANGODIR
source ../../bin/activate

# Set additional environment variables.
source ../../bin/postactivate

# Create the run directory if it doesn't exist.
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR

# Programs meant to be run under supervisor should not daemonize themselves
# (do not use --daemon).
exec gunicorn \
 		--name $NAME \
  		--workers $NUM_WORKERS \
  		--threads $NUM_THREADS \
  		--max-requests $MAX_REQUESTS \
  		--user=$USER --group=$GROUP \
  		--log-level=debug \
  		--bind=unix:$SOCKFILE \
  		--timeout=45 \
  		--keep-alive 75 \
  		{{item}}.wsgi:application