---

- name: Install Nginx
  apt: name=nginx update_cache={{ update_apt_cache }} state=present
  tags: packages

- name: Create the Nginx configuration file REMOTE
  template: src=nginx_site_config.j2
            dest=/etc/nginx/sites-available/{{ application_name }}_{{item}}
            backup=yes
  notify:
    - reload nginx
    - restart nginx
  when: env_type != 'local'
  tags:
    - sites
  loop: "{{django_settings}}"
  loop_control:
    index_var: item_index

- name: Create the Nginx configuration file LOCAL
  template: src=nginx_site_config_local.j2
            dest=/etc/nginx/sites-available/{{ application_name }}_{{item}}
            backup=yes
  notify:
    - reload nginx
    - restart nginx
  when: env_type == 'local'
  tags:
    - sites
  loop: "{{django_settings}}"
  loop_control:
    index_var: item_index

- name: Ensure that the default site is disabled
  command: rm /etc/nginx/sites-enabled/default
           removes=/etc/nginx/sites-enabled/default
  notify:
    - reload nginx
    - restart nginx
  tags:
    - sites

- name: Ensure that the old site is removed
  shell: "rm /etc/nginx/sites-enabled/{{project_name}}"
  notify:
    - reload nginx
    - restart nginx
  tags:
    - sites
  ignore_errors: yes

- name: Ensure that the application site is enabled
  command: ln -s /etc/nginx/sites-available/{{ application_name }}_{{item}}
           /etc/nginx/sites-enabled/{{ application_name }}_{{item}}
           creates=/etc/nginx/sites-enabled/{{ application_name }}_{{item}}
  notify:
    - reload nginx
    - restart nginx
  tags:
    - sites
  loop: "{{django_settings}}"
  loop_control:
    index_var: item_index

- name: Ensure Nginx service is started
  service: name=nginx state=started enabled=yes
  tags:
    - sites
