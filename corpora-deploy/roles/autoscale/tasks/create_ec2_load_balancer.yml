---

- name: Create Elastic Load Balancer
  local_action:
    module: ec2_elb_lb
    name: "LB-{{ project_name }}-{{env_type}}-{{server_type}}"
    #description: "Load Balancer for {{ project_name }} {{env_type}} webserver"
    #tags:
    #  name: "LB-{{ project_name }}-{{env_type}}"
    #  instanceType: "{{env_type}}"
    #  organization: tehiku
    state: present
    region: ap-southeast-2
    listeners:
      - protocol: http # options are http, https, ssl, tcp
        load_balancer_port: 80
        instance_port: 80
      - protocol: http
        load_balancer_port: 5555
        instance_port: 5555 
      - protocol: https
        load_balancer_port: 443
        instance_port: 443
        # ssl certificate required for https or ssl
        ssl_certificate_id: "arn:aws:iam::473856431958:server-certificate/kuakaTeHikuNZ"
    health_check:
        ping_protocol: tcp # options are http, https, ssl, tcp
        ping_port: 80
        response_timeout: 60 # seconds
        interval: 300 # seconds
        unhealthy_threshold: 10
        healthy_threshold: 2
    security_group_names:
      - "{{ec2_server.groups[0]['name']}}" # this only works for 1 security group
    zones: # list of availability zones to enable for this elb
      - ap-southeast-2a
      - ap-southeast-2b 
      - ap-southeast-2c
  register: ec2_elb_lb
  tags:
    - ec2
    - elb
    - lb


### WE DONT NEED TO DO THIS SINCE ASG WILL SPIN UP INSTANCES FOR US.

# - name: register instance with the LB
#   local_action:
#     module: ec2_elb
#     instance_id: "{{ansible_ec2_instance_id}}"
#     ec2_elbs: "LB-{{ project_name }}-{{env_type}}-{{server_type}}"
#     state: present
#     wait: yes
#     region: ap-southeast-2
#   register: ec2_elb
#   ignore_errors: yes
#   tags:
#     - ec2
#     - elb