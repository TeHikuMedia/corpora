---

- name: get elb fascts
  elb_application_lb_facts:
    region: "{{aws_region}}"    
    names:
      - ELB-LB-{{ project_name }}-{{env_type}}-web
  register: elb
  tags:
    - test

- name: Get ARN for ELB TG
  elb_target_group_facts:
    region: "{{aws_region}}"
    names:
      - ELB-TG-{{ project_name }}-{{env_type}}-{{server_type}}
  register: elb_targets
  tags:
    - test

- set_fact:
    tg_id: "{{ elb_targets.target_groups[0].target_group_arn.split('ELB-TG-'+project_name+'-'+env_type+'-'+server_type+'/')[1] }}"
  tags:
    - test

- set_fact:
    elb_id: "{{ elb.load_balancers[0].load_balancer_arn.split('ELB-LB-'+ project_name +'-'+ env_type + '-web/')[1] }}"
  tags:
    - test


# - name: Create Alarm for ASG Policies - Low requests
#   local_action:
#     module: ec2_metric_alarm
#     name: "Requests-Low-Alarm-{{ project_name }}-{{env_type}}"
#     state: present # what happens if it's already present... can we overwrite it?
#     region: "{{aws_region}}"
#     metric: "RequestCountPerTarget"
#     namespace: "AWS/ApplicationELB"
#     statistic: Sum
#     comparison: "<"
#     threshold: 50.0
#     period: 60
#     evaluation_periods: 2
#     unit: "Count"
#     description: "This will alarm when low traffic"
#     dimensions:
#       LoadBalancer: 'app/ELB-LB-{{ project_name }}-{{env_type}}-web/{{elb_id}}'
#       TargetGroup: 'targetgroup/ELB-TG-{{ project_name }}-{{env_type}}-web/{{tg_id}}'
#     alarm_actions: "{{ec2_scaling_policy_down.arn}}"
#   register: ec2_metric_alarm_low_cpu
#   tags:
#     - ec2
#     - scaling
#     - alarms

- name: Create Alarm for ASG Policies - High requests
  local_action:
    module: ec2_metric_alarm
    name: "HIGH-Requests-Alarm-{{ project_name }}-{{env_type}}"
    state: present # what happens if it's already present... can we overwrite it?
    region: "{{aws_region}}"
    metric: "RequestCount"
    namespace: "AWS/ApplicationELB"
    statistic: Sum
    comparison: ">"
    threshold: 50.0
    period: 60
    evaluation_periods: 2
    unit: "Count"
    description: "This will alarm when high traffic"
    dimensions:
      LoadBalancer: 'app/ELB-LB-{{ project_name }}-{{env_type}}-web/{{elb_id}}'
      TargetGroup: 'targetgroup/ELB-TG-{{ project_name }}-{{env_type}}-web/{{tg_id}}'
    alarm_actions: "{{ec2_scaling_policy_up.arn}}"
  register: ec2_metric_alarm_high_cpu
  tags:
    - ec2
    - scaling
    - alarms

