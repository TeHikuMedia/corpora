---

### PLAYBOOK FOR THE LOCAL VAGRANT VM ###

- name: "Launching a local vagrant {{ application_name }} server"
  hosts: localhost
  tasks:
    - name: "Destroy vagrant to start from scratch"
      command: vagrant destroy -f
      when : destroy_vagrant
    - name: "Vagrant Up"
      command: vagrant up
    - name: get Vagrant IP Address
      shell: python vagrant/vagrant_inventory.py
  vars_files:
    - env_vars/base.yml
    - env_vars/local.yml
    - env_vars/vault.yml
  vars:
    - new_vagrant_created: not destroy_vagrant
  tags:
    - local
    - launch-local

# This should be called by the vagrant file. Hence its special tag
# The downside of this is that we won't see any output.
- name: "Provisioning a local vagrant {{ application_name }} server"
  hosts: default # this will act on all hosts in the vagrant/ansible/inventory which will just be the 1 host from vagrant up
  port: 22
  remote_user: vagrant
  become: true
  #become_user: root
  vars:
    - setup_bitbucket_repo: no
    - update_apt_cache: yes  
    - host_tag: tag_project_env_server_type_{{application_name}}_{{env_type}}_web    
  vars_files:
    - env_vars/base.yml
    - env_vars/local.yml
    - env_vars/vault.yml
  roles:
    - base
    - local-db
    - memcached
    - rabbitmq
  tags:
    - local
    - provision
    - provision-local
    - vagrant-provision-local

# DEPLOY:
# this should stop all sevices,  deploy the latest code, and then restart all services
# note that deploy doesn't apply for local vagrant.
- name: "Deploy to local {{ application_name }} server"
  hosts: default
  port: 22
  remote_user: vagrant
  become: true
  become_user: root
  vars:
    - setup_bitbucket_repo: no
    - update_apt_cache: yes 
    - ec2_solrserver_private_ip: 127.0.0.1  
    - server_type: web
    - host_tag: tag_project_env_server_type_{{application_name}}_{{env_type}}_web    
  vars_files:
    - env_vars/base.yml
    - env_vars/local.yml  
    - env_vars/vault.yml
  roles: 
    # - search
    - web
    - celery
  tags:
    - local
    - deploy
    - deploy-local

# - name: "Deploy local {{ application_name }} solr server"
#   hosts: default # note that we didn't do the memchaceh server so only asking for webserver
#   remote_user: admin
#   sudo: yes
#   vars_files:
#     - env_vars/base.yml
#     - env_vars/local.yml
#     - env_vars/vault.yml
#   roles:
#     - search
#   tags:
#     - local
#     - deploy
#     - deploy-local
#     - search
#     - remote
