# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-07-26 03:05
from __future__ import unicode_literals

from django.db import migrations

from corpus.models import get_md5_hexdigest_of_file
from django.db.models import Q

import logging
logger = logging.getLogger('corpora')


def create_md5_for_files(apps, schema_editor):
    Recording = apps.get_model('corpus', 'Recording')
    QualityControl = apps.get_model('corpus', 'QualityControl')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    recordings = Recording.objects\
        .filter(Q(audio_file_md5=None) | Q(audio_file_md5__isnull=True))

    print ' '
    count = 1
    total = recordings.count()
    for recording in recordings:
        try:
            recording.audio_file_md5 = \
                get_md5_hexdigest_of_file(recording.audio_file)
            recording.save()
        except IOError as e:
            print "  {1:06}/{2} File does not exist - R{0}".format(
                recording.pk, count, total)
            # if 'file does not exist' in str(e).lower():
            logger.debug(
                'Recording {0}: Files does not exist.'.format(
                    recording.pk))
            qc = QualityControl.objects.create(
                delete=True,
                content_type=ContentType.objects.get_for_model(
                    recording),
                object_id=recording.pk)
            qc.save()
        count = count + 1


def remove_md5(apps, schema_editor):
    '''These can be a dummy method because we'll just lose the data when
    the field is dropped.
    '''
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('corpus', '0033_recording_audio_file_md5'),
    ]

    operations = [
        migrations.RunPython(create_md5_for_files, reverse_code=remove_md5),
    ]
